/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AzureMediaServices } from "@azure/arm-mediaservices";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Get the details of an Asset Filter associated with the specified Asset.
 *
 * @summary Get the details of an Asset Filter associated with the specified Asset.
 * x-ms-original-file: specification/mediaservices/resource-manager/Microsoft.Media/Metadata/stable/2022-08-01/examples/assetFilters-get-by-name.json
 */
function getAnAssetFilterByName() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["MEDIASERVICES_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = process.env["MEDIASERVICES_RESOURCE_GROUP"] || "contoso";
        const accountName = "contosomedia";
        const assetName = "ClimbingMountRainer";
        const filterName = "assetFilterWithTimeWindowAndTrack";
        const credential = new DefaultAzureCredential();
        const client = new AzureMediaServices(credential, subscriptionId);
        const result = yield client.assetFilters.get(resourceGroupName, accountName, assetName, filterName);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        getAnAssetFilterByName();
    });
}
main().catch(console.error);
//# sourceMappingURL=assetFiltersGetSample.js.map